@page "/incrementalloading"

<PageTitle>Incremental Loading</PageTitle>
<h3>Incremental Loading</h3>
<div class="toolkit">
    <button class="toolkit-item oi oi-arrow-top"
            title="Back to the top"></button>
    <button class="toolkit-item oi oi-reload"
            title="Reload"
            @onclick="()=>this.virtualList?.RefreshAsync()"></button>
</div>
<VirtualList @ref="virtualList"
             TItem="int"
             IncrementalItemsProvider="@this.LoadDataAsync">
    <Layout>
        <WaterfallLayout VirtualList="context"
                         HorizontalSpacing="12"
                         VerticalSpacing="24"
                         HeightCalculator="(o,_)=>o"></WaterfallLayout>
    </Layout>
    <ItemTemplate>
        <div style="height:100%;background-color:#aaccee;">@context</div>
    </ItemTemplate>
</VirtualList>

@code {
    private VirtualList<int> virtualList;
    private async ValueTask<IEnumerable<int>> LoadDataAsync()
    {
        await Task.Delay(800);
        Console.WriteLine("xxxxxxxxxxxxxxxxxxxxxxxxxx");
        var items = Enumerable
              .Range(0, 50)
              .Select(o => new Random().Next(120, 600));
        return items;
    }
}